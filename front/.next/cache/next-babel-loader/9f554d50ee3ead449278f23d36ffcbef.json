{"ast":null,"code":"import postSaga from \"./post\";\nimport userSaga from \"./user\";\nexport default function* rootSaga() {\n  yield all([fork(postSaga), fork(userSaga)]);\n} //all 동시 실행하게 해준다 - all로 한방에 등록함\n//fork 는 실행\n//call 도 실행인데, 조금 다름 -\n\n/*\r\ngenerator 는 중단점 만들어 주는거\r\nlet i = 0;\r\ncons gen = function*() {\r\n    while(true){\r\n        yield i++;\r\n    }\r\n}\r\ng.next() 실행\r\n\r\n=> 이벤트 리스너랑 비슷!!!!!\r\n=> 무한 이벤트 리스너로 활용 가능 @@@@@@@@@\r\n*/","map":{"version":3,"names":["postSaga","userSaga","rootSaga","all","fork"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/sagas/index.js"],"sourcesContent":["import postSaga from \"./post\";\r\nimport userSaga from \"./user\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(postSaga), fork(userSaga)]);\r\n}\r\n//all 동시 실행하게 해준다 - all로 한방에 등록함\r\n\r\n//fork 는 실행\r\n//call 도 실행인데, 조금 다름 -\r\n\r\n/*\r\ngenerator 는 중단점 만들어 주는거\r\nlet i = 0;\r\ncons gen = function*() {\r\n    while(true){\r\n        yield i++;\r\n    }\r\n}\r\ng.next() 실행\r\n\r\n=> 이벤트 리스너랑 비슷!!!!!\r\n=> 무한 이벤트 리스너로 활용 가능 @@@@@@@@@\r\n*/\r\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,UAAUC,QAAV,GAAqB;EAClC,MAAMC,GAAG,CAAC,CAACC,IAAI,CAACJ,QAAD,CAAL,EAAiBI,IAAI,CAACH,QAAD,CAArB,CAAD,CAAT;AACD,C,CACD;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}