{"ast":null,"code":"import axios from \"axios\";\nimport shortId from \"shortid\";\nimport { all, delay, fork, put, takeLatest, throttle } from \"redux-saga/effects\";\nimport { ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post/${data.postId}}/comment\", data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(\"ADD_COMMENT_REQUEST\", addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","shortId","all","delay","fork","put","takeLatest","throttle","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","id","generate","type","ADD_POST_SUCCESS","content","err","console","error","ADD_POST_FAILURE","response","addCommentAPI","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport shortId from \"shortid\";\r\nimport {\r\n  all,\r\n  delay,\r\n  fork,\r\n  put,\r\n  takeLatest,\r\n  throttle,\r\n} from \"redux-saga/effects\";\r\n\r\nimport { ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(\"/api/post/${data.postId}}/comment\", data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(\"ADD_COMMENT_REQUEST\", addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,UALF,EAMEC,QANF,QAOO,oBAPP;AASA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,kBAAzD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB,OAAOX,KAAK,CAACY,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;EACxB,IAAI;IACF;IACA,MAAMX,KAAK,CAAC,IAAD,CAAX;IACA,MAAMY,EAAE,GAAGd,OAAO,CAACe,QAAR,EAAX;IACA,MAAMX,GAAG,CAAC;MACRY,IAAI,EAAEC,gBADE;MAERP,IAAI,EAAE;QACJI,EADI;QAEJI,OAAO,EAAEL,MAAM,CAACH;MAFZ;IAFE,CAAD,CAAT;EAOD,CAXD,CAWE,OAAOS,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMf,GAAG,CAAC;MACRY,IAAI,EAAEM,gBADE;MAERZ,IAAI,EAAES,GAAG,CAACI,QAAJ,CAAab;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASc,aAAT,CAAuBd,IAAvB,EAA6B;EAC3B,OAAOX,KAAK,CAACY,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,CAAP;AACD;;AAED,UAAUe,UAAV,CAAqBZ,MAArB,EAA6B;EAC3B,IAAI;IACF;IACA,MAAMX,KAAK,CAAC,IAAD,CAAX;IACA,MAAMY,EAAE,GAAGd,OAAO,CAACe,QAAR,EAAX;IACA,MAAMX,GAAG,CAAC;MACRY,IAAI,EAAET,mBADE;MAERG,IAAI,EAAE;QACJI,EADI;QAEJI,OAAO,EAAEL,MAAM,CAACH;MAFZ;IAFE,CAAD,CAAT;EAOD,CAXD,CAWE,OAAOS,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMf,GAAG,CAAC;MACRY,IAAI,EAAER,mBADE;MAERE,IAAI,EAAES,GAAG,CAACI,QAAJ,CAAab;IAFX,CAAD,CAAT;EAID;AACF;;AACD,UAAUgB,YAAV,GAAyB;EACvB,MAAMrB,UAAU,CAAC,kBAAD,EAAqBO,OAArB,CAAhB;AACD;;AAED,UAAUe,eAAV,GAA4B;EAC1B,MAAMtB,UAAU,CAAC,qBAAD,EAAwBoB,UAAxB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;EAClC,MAAM3B,GAAG,CAAC,CAACE,IAAI,CAACuB,YAAD,CAAL,EAAqBvB,IAAI,CAACwB,eAAD,CAAzB,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}