{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sungjae jo\\\\Documents\\\\react\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, Button, Avatar, Popover, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"mroe\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string\n    })),\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Button","Avatar","Popover","List","Comment","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","commentFormOpened","setCommentFormOpened","id","user","me","liked","setLiked","onToggleLike","prev","onToggleComment","onRemovePost","type","data","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","arrayOf","src","createdAt"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, Button, Avatar, Popover, List, Comment } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartTwoTone,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me && state.user.me.id);\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"mroe\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={onRemovePost}\r\n                      loading={removePostLoading}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length} 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    user: PropTypes.object,\r\n    content: PropTypes.string,\r\n    Images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        src: PropTypes.string,\r\n      })\r\n    ),\r\n    createdAt: PropTypes.object,\r\n  }),\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}