{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport shortId from \"shortid\";\nimport postSaga from \"../sagas/post\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error\n      };\n\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error\n      };\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentError: null,\n        addCommentDone: false,\n        addCommentLoading: true\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // action.data.content, userid, postid\n        // 불변성 핵심 : 바뀌는거만 새로운 객체로 만들고, 나머지 객체는 참조 유지 해야한다 - 메모리 절약 가능하고자\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        console.log(\"@@@@@@@@@@@@@ postindex\");\n        console.log(postIndex);\n        console.log(action.data);\n        console.log(action.data.content);\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return {\n        addCommentLoading: false,\n        addCommentError: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","postSaga","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","console","log","post"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport postSaga from \"../sagas/post\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n      },\r\n      content: \"첫 번째 게시글\",\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개정판이 나왔군요~\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"얼른 사고싶어요~\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n});\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentError: null,\r\n        addCommentDone: false,\r\n        addCommentLoading: true,\r\n      };\r\n    case ADD_COMMENT_SUCCESS: {\r\n      // action.data.content, userid, postid\r\n      // 불변성 핵심 : 바뀌는거만 새로운 객체로 만들고, 나머지 객체는 참조 유지 해야한다 - 메모리 절약 가능하고자\r\n      const postIndex = state.mainPosts.findIndex(\r\n        (v) => v.id === action.data.postId\r\n      );\r\n      console.log(\"@@@@@@@@@@@@@ postindex\");\r\n      console.log(postIndex);\r\n      console.log(action.data);\r\n      console.log(action.data.content);\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}