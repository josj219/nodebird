{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\"; //saga 설정 방법\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\"; //saga 설정 방법\r\n\r\nconst loggerMiddleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n  };\r\n\r\nconst configureStore = (context) => {\r\n  console.log(context);\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAAiC;;AAEjC,IAAMC,gBAAgB,GACpB,SADIA,gBACJ;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,IAAaC,QAAb,QAAaA,QAAb;EAAA,OACA,UAACC,IAAD;IAAA,OACA,UAACC,MAAD,EAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOD,IAAI,CAACC,MAAD,CAAX;IACD,CAJD;EAAA,CADA;AAAA,CADF;;AAQA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;EAClCH,OAAO,CAACC,GAAR,CAAYE,OAAZ;EACA,IAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;EACA,IAAMa,WAAW,GAAG,CAACD,cAAD,EAAiBT,gBAAjB,CAApB;EACA,IAAMW,QAAQ,GACZ,QACIhB,OAAO,CAACF,eAAe,MAAf,SAAmBiB,WAAnB,CAAD,CADX,GAEId,mBAAmB,CAACH,eAAe,MAAf,SAAmBiB,WAAnB,CAAD,CAHzB;EAIA,IAAME,KAAK,GAAGlB,WAAW,CAACI,OAAD,EAAUa,QAAV,CAAzB;EACAC,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBf,QAAnB,CAAjB;EACA,OAAOa,KAAP;AACD,CAXD;;AAaA,IAAMG,OAAO,GAAGvB,aAAa,CAACe,cAAD,EAAiB;EAC5CS,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}