{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore } from \"redux\";\nimport reducer from \"../reducers\";\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","createStore","reducer","configureStore","context","console","log","middlewares","enhancer","compose","applyMiddleware","composeWithDevTools","store","wrapper","debug"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = (context) => {\r\n  console.log(context);\r\n  const middlewares = [];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;EAClCC,OAAO,CAACC,GAAR,CAAYF,OAAZ;EACA,IAAMG,WAAW,GAAG,EAApB;EACA,IAAMC,QAAQ,GACZ,QACIC,OAAO,CAACC,eAAe,MAAf,SAAmBH,WAAnB,CAAD,CADX,GAEII,mBAAmB,CAACD,eAAe,MAAf,SAAmBH,WAAnB,CAAD,CAHzB;EAIA,IAAMK,KAAK,GAAGX,WAAW,CAACC,OAAD,EAAUM,QAAV,CAAzB;EACA,OAAOI,KAAP;AACD,CATD;;AAWA,IAAMC,OAAO,GAAGb,aAAa,CAACG,cAAD,EAAiB;EAC5CW,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}