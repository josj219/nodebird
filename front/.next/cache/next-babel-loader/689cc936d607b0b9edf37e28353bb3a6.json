{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glovis-laptop\\\\Documents\\\\react\\\\inflearn\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\n\nconst PostCardContent = ({\n  postData\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, postData.split(/(#[^\\s#]+)/g).map(v => {\n  if (v.match(/(#[^\\s]+)/)) {\n    return __jsx(Link, {\n      href: {\n        pathname: \"/hashtag\",\n        query: {\n          tag: v.slice(1)\n        }\n      },\n      as: `/hashtag/${v.slice(1)}`,\n      key: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, v));\n  }\n\n  return v;\n}));\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;","map":{"version":3,"names":["React","Link","PropTypes","PostCardContent","postData","split","map","v","match","pathname","query","tag","slice","propTypes","string","isRequired"],"sources":["C:/Users/glovis-laptop/Documents/react/inflearn/nodebird/prepare/front/components/PostCardContent.js"],"sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostCardContent = ({ postData }) => (\r\n  <div>\r\n    {postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n      if (v.match(/(#[^\\s]+)/)) {\r\n        return (\r\n          <Link\r\n            href={{ pathname: \"/hashtag\", query: { tag: v.slice(1) } }}\r\n            as={`/hashtag/${v.slice(1)}`}\r\n            key={v}\r\n          >\r\n            <a>{v}</a>\r\n          </Link>\r\n        );\r\n      }\r\n      return v;\r\n    })}\r\n  </div>\r\n);\r\n\r\nPostCardContent.propTypes = {\r\n  postData: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostCardContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAG,CAAC;EAAEC;AAAF,CAAD,KACtB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACGA,QAAQ,CAACC,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAmCC,CAAD,IAAO;EACxC,IAAIA,CAAC,CAACC,KAAF,CAAQ,WAAR,CAAJ,EAA0B;IACxB,OACE,MAAC,IAAD;MACE,IAAI,EAAE;QAAEC,QAAQ,EAAE,UAAZ;QAAwBC,KAAK,EAAE;UAAEC,GAAG,EAAEJ,CAAC,CAACK,KAAF,CAAQ,CAAR;QAAP;MAA/B,CADR;MAEE,EAAE,EAAG,YAAWL,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAW,EAF7B;MAGE,GAAG,EAAEL,CAHP;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAKE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIA,CAAJ,CALF,CADF;EASD;;EACD,OAAOA,CAAP;AACD,CAbA,CADH,CADF;;AAmBAJ,eAAe,CAACU,SAAhB,GAA4B;EAC1BT,QAAQ,EAAEF,SAAS,CAACY,MAAV,CAAiBC;AADD,CAA5B;AAIA,eAAeZ,eAAf"},"metadata":{},"sourceType":"module"}