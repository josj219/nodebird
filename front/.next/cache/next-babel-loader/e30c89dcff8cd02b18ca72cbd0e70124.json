{"ast":null,"code":"import axios from \"axios\";\nimport shortId from \"shortid\";\nimport { all, delay, fork, put, takeLatest, throttle } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post/${data.postId}}/comment\", data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    console.log(\"ADDDDDDDD!!!!!!\");\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data // action.data,\n\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","shortId","all","delay","fork","put","takeLatest","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","post","addPost","action","id","generate","type","content","err","console","error","response","addCommentAPI","addComment","log","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport shortId from \"shortid\";\r\nimport {\r\n  all,\r\n  delay,\r\n  fork,\r\n  put,\r\n  takeLatest,\r\n  throttle,\r\n} from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: id,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(\"/api/post/${data.postId}}/comment\", data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    console.log(\"ADDDDDDDD!!!!!!\");\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n\r\n      // action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,UALF,EAMEC,QANF,QAOO,oBAPP;AASA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB,OAAOhB,KAAK,CAACiB,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;EACxB,IAAI;IACF;IACA,MAAMhB,KAAK,CAAC,IAAD,CAAX;IACA,MAAMiB,EAAE,GAAGnB,OAAO,CAACoB,QAAR,EAAX;IACA,MAAMhB,GAAG,CAAC;MACRiB,IAAI,EAAEb,gBADE;MAERO,IAAI,EAAE;QACJI,EADI;QAEJG,OAAO,EAAEJ,MAAM,CAACH;MAFZ;IAFE,CAAD,CAAT;IAOA,MAAMX,GAAG,CAAC;MACRiB,IAAI,EAAER,cADE;MAERE,IAAI,EAAEI;IAFE,CAAD,CAAT;EAID,CAfD,CAeE,OAAOI,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnB,GAAG,CAAC;MACRiB,IAAI,EAAEZ,gBADE;MAERM,IAAI,EAAEQ,GAAG,CAACG,QAAJ,CAAaX;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASY,aAAT,CAAuBZ,IAAvB,EAA6B;EAC3B,OAAOhB,KAAK,CAACiB,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,CAAP;AACD;;AAED,UAAUa,UAAV,CAAqBV,MAArB,EAA6B;EAC3B,IAAI;IACF;IACA,MAAMhB,KAAK,CAAC,IAAD,CAAX;IACAsB,OAAO,CAACK,GAAR,CAAY,iBAAZ;IACA,MAAMzB,GAAG,CAAC;MACRiB,IAAI,EAAEV,mBADE;MAERI,IAAI,EAAEG,MAAM,CAACH,IAFL,CAIR;;IAJQ,CAAD,CAAT;EAMD,CAVD,CAUE,OAAOQ,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnB,GAAG,CAAC;MACRiB,IAAI,EAAET,mBADE;MAERG,IAAI,EAAEQ,GAAG,CAACG,QAAJ,CAAaX;IAFX,CAAD,CAAT;EAID;AACF;;AACD,UAAUe,YAAV,GAAyB;EACvB,MAAMzB,UAAU,CAACE,gBAAD,EAAmBU,OAAnB,CAAhB;AACD;;AAED,UAAUc,eAAV,GAA4B;EAC1B,MAAM1B,UAAU,CAACK,mBAAD,EAAsBkB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;EAClC,MAAM/B,GAAG,CAAC,CAACE,IAAI,CAAC2B,YAAD,CAAL,EAAqB3B,IAAI,CAAC4B,eAAD,CAAzB,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}