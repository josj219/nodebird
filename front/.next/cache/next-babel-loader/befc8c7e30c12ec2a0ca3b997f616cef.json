{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sungjae jo\\\\Documents\\\\react\\\\nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","dispatch","onSubmitComment","type","data","content","postId","userId","position","right","bottom","propTypes","object","isRequired"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item>\r\n        <Input.TextArea\r\n          rows={4}\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n        />\r\n        <Button\r\n          style={{ position: \"absolute\", right: 0, bottom: -40 }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAChC,MAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;EAAA,CAAD,CAAtB;EACA,MAAM;IAAEI;EAAF,IAAqBT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAtC;EACA,MAAM,CAACM,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDX,QAAQ,CAAC,EAAD,CAAnE;EACA,MAAMY,QAAQ,GAAGd,WAAW,EAA5B;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIY,cAAJ,EAAoB;MAClBG,cAAc,CAAC,EAAD,CAAd;IACD;EACF,CAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;EAMA,MAAMK,eAAe,GAAGlB,WAAW,CAAC,MAAM;IACxCiB,QAAQ,CAAC;MACPE,IAAI,EAAEb,mBADC;MAEPc,IAAI,EAAE;QAAEC,OAAO,EAAEP,WAAX;QAAwBQ,MAAM,EAAEd,IAAI,CAACC,EAArC;QAAyCc,MAAM,EAAEd;MAAjD;IAFC,CAAD,CAAR;EAID,CALkC,EAKhC,CAACK,WAAD,EAAcL,EAAd,CALgC,CAAnC;EAOA,OACE,MAAC,IAAD;IAAM,QAAQ,EAAES,eAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD,CAAM,IAAN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAD,CAAO,QAAP;IACE,IAAI,EAAE,CADR;IAEE,KAAK,EAAEJ,WAFT;IAGE,QAAQ,EAAEC,mBAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAME,MAAC,MAAD;IACE,KAAK,EAAE;MAAES,QAAQ,EAAE,UAAZ;MAAwBC,KAAK,EAAE,CAA/B;MAAkCC,MAAM,EAAE,CAAC;IAA3C,CADT;IAEE,IAAI,EAAC,SAFP;IAGE,QAAQ,EAAC,QAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBANF,CADF,CADF;AAkBD,CArCD;;AAuCAnB,WAAW,CAACoB,SAAZ,GAAwB;EACtBnB,IAAI,EAAEN,SAAS,CAAC0B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAetB,WAAf"},"metadata":{},"sourceType":"module"}