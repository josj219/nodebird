{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Sungjae jo\\\\Documents\\\\react\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    return state.user.me && state.user.me.id;\n  });\n\n  var _useState2 = useState(false),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"mroe\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"\\uB313\\uAE00\\uBD80\\uBD84\"));\n};\n\n_s(PostCard, \"+5KxjPCW3FV0o49CDsZMpd+x3qc=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string\n    })),\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","PropTypes","useSelector","Card","Popover","Button","Avatar","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","PostCard","post","commentFormOpened","setCommentFormOpened","id","state","user","me","liked","setLiked","onToggleLike","prev","onToggleComment","Images","User","nickname","content","propTypes","shape","number","object","string","arrayOf","src","createdAt"],"sources":["C:/Users/Sungjae jo/Documents/react/nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Popover, Button, Avatar } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartTwoTone,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me && state.user.me.id);\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n          <MessageOutlined key=\"comment\" />,\r\n          <Popover\r\n            key=\"mroe\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && <div>댓글부분</div>}\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    user: PropTypes.object,\r\n    content: PropTypes.string,\r\n    Images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        src: PropTypes.string,\r\n      })\r\n    ),\r\n    createdAt: PropTypes.object,\r\n  }),\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}