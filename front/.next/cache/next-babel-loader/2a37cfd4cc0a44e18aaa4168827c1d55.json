{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"../reducers\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","thunkMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","middlewares","enhancer","store","wrapper","debug"],"sources":["C:/Users/glovis-laptop/Documents/react/inflearn/nodebird/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"../reducers\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = (context) => {\n  console.log(context);\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GACpB,SADIA,gBACJ;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,IAAaC,QAAb,QAAaA,QAAb;EAAA,OACA,UAACC,IAAD;IAAA,OACA,UAACC,MAAD,EAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOD,IAAI,CAACC,MAAD,CAAX;IACD,CAJD;EAAA,CADA;AAAA,CADF;;AAQA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;EAClCH,OAAO,CAACC,GAAR,CAAYE,OAAZ;EACA,IAAMC,WAAW,GAAG,CAACX,eAAD,EAAkBE,gBAAlB,CAApB;EACA,IAAMU,QAAQ,GACZ,QACId,OAAO,CAACF,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADX,GAEIZ,mBAAmB,CAACH,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAHzB;EAIA,IAAME,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAAUW,QAAV,CAAzB;EACA,OAAOC,KAAP;AACD,CATD;;AAWA,IAAMC,OAAO,GAAGnB,aAAa,CAACc,cAAD,EAAiB;EAC5CM,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}